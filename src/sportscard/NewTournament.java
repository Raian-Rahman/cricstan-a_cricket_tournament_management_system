/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *
 * @author raian
 * @author rizvi_hasan
 * @author abdullah_al_farhad
 * @author shahriar_nur_nahin
 * 
 */

package sportscard;

import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.beans.binding.Bindings.or;
import javax.swing.JOptionPane;

/**
 *
 * @author raian
 */
public class NewTournament extends javax.swing.JFrame {

    /**
     * Creates new form NewTournament
     */
    Tournament newTournament = new Tournament();
    public NewTournament() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TeamNo = new javax.swing.JLabel();
        tournamentName = new javax.swing.JTextField();
        Season = new javax.swing.JTextField();
        Style = new javax.swing.JLabel();
        SingleGame = new javax.swing.JRadioButton();
        HomeandAway = new javax.swing.JRadioButton();
        Knockout = new javax.swing.JRadioButton();
        reset = new javax.swing.JButton();
        next = new javax.swing.JButton();
        numberofTeams = new javax.swing.JTextField();
        mp = new javax.swing.JLabel();
        minimumPlayer = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tid = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NewTournament");

        jLabel1.setFont(new java.awt.Font("Forte", 0, 18)); // NOI18N
        jLabel1.setText("Add New Tournament");

        jLabel2.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        jLabel2.setText("Tournament Name");

        jLabel4.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        jLabel4.setText("Season");

        TeamNo.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        TeamNo.setText("Number of Teams");

        tournamentName.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N

        Season.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        Season.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeasonActionPerformed(evt);
            }
        });

        Style.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        Style.setText("Tournament Style");

        SingleGame.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        SingleGame.setText("Single Game");
        SingleGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SingleGameActionPerformed(evt);
            }
        });

        HomeandAway.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        HomeandAway.setText("Home and Away");
        HomeandAway.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeandAwayActionPerformed(evt);
            }
        });

        Knockout.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        Knockout.setText("Knockout");
        Knockout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KnockoutActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Felix Titling", 1, 12)); // NOI18N
        reset.setText("Reset");
        reset.setSelected(true);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        next.setFont(new java.awt.Font("Felix Titling", 1, 12)); // NOI18N
        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        numberofTeams.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        numberofTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberofTeamsActionPerformed(evt);
            }
        });

        mp.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        mp.setText("Minimum Player");

        minimumPlayer.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel3.setText("Tournament ID ");

        tid.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Felix Titling", 1, 12)); // NOI18N
        jButton1.setText("Validate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(238, 238, 238))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Style, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TeamNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(17, 17, 17)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SingleGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(numberofTeams, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HomeandAway, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(Knockout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mp)
                                .addGap(31, 31, 31)
                                .addComponent(minimumPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tournamentName)
                            .addComponent(Season))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tournamentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Season, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TeamNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numberofTeams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mp)
                            .addComponent(minimumPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Style)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SingleGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HomeandAway, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Knockout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SeasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeasonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SeasonActionPerformed

    private void SingleGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SingleGameActionPerformed
        // TODO add your handling code here:
        if(SingleGame.isSelected())
        {
            HomeandAway.setSelected(false);
            Knockout.setSelected(false);
        }
    }//GEN-LAST:event_SingleGameActionPerformed

    private void HomeandAwayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeandAwayActionPerformed
        // TODO add your handling code here:
        if(HomeandAway.isSelected())
        {
            SingleGame.setSelected(false);
            Knockout.setSelected(false);
        }
    }//GEN-LAST:event_HomeandAwayActionPerformed

    private void KnockoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KnockoutActionPerformed
        // TODO add your handling code here:
        if(Knockout.isSelected())
        {
            HomeandAway.setSelected(false);
            SingleGame.setSelected(false);
        }
    }//GEN-LAST:event_KnockoutActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        tournamentName.setText("");
        Season.setText("");
        numberofTeams.setText("");
        minimumPlayer.setText("");
        HomeandAway.setSelected(false);
        SingleGame.setSelected(false);
        Knockout.setSelected(false);
    }//GEN-LAST:event_resetActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        String flag = this.newTournament.getTournamentID();
        if(flag.equals(""))     JOptionPane.showMessageDialog(rootPane, "Error in adding");
        else 
        {
            AddTeams obj = new AddTeams(this.newTournament.getTournamentID());
            obj.setVisible(true);
            dispose();
        }

    }//GEN-LAST:event_nextActionPerformed

    private void numberofTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberofTeamsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberofTeamsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String tournamentname = tournamentName.getText();
        String season = Season.getText();
        boolean flag=true;
        String extra=numberofTeams.getText();
      //  System.out.println("hoise");
        for(int i=0;i<extra.length() && flag; i++)
        {
            
            if(extra.charAt(i)<'0' || extra.charAt(i)>'9')  flag=false;
        }
        int numbers=0;
        if(flag==false) 
        {
            
            JOptionPane.showMessageDialog(rootPane,"Press Reset and Enter Teams Properly");
        }
        else    numbers =   Integer.valueOf(numberofTeams.getText());
        int type =0;
        if(SingleGame.isSelected())        type = 1;
        else if(HomeandAway.isSelected())  type = 2;
        else if(Knockout.isSelected())     type = 3;
        flag=true;
        extra = minimumPlayer.getText();
        for(int i=0;i<extra.length() && flag; i++)
        {
            
            if(extra.charAt(i)<'0' || extra.charAt(i)>'9')  flag=false;
        }
        int mp=0;
        if(flag==false)
        {
            JOptionPane.showMessageDialog(rootPane,"please reset and enter minimum player properly");
        }
        else mp = Integer.parseInt(extra);
        if(0 >numbers || tournamentname.length()==0 || 0==season.length() || type ==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Fill up all necessary components");
        }
        else 
        {
            String str = "";
            try {
                newTournament = new Tournament(tournamentname,season,numbers,mp,type,true);
            } catch (InterruptedException ex) {
                Logger.getLogger(NewTournament.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            int flagg = newTournament.getStatus();
            if(flagg==0)    JOptionPane.showMessageDialog(rootPane,"Tournament already exists");
            else            
            {
                
                str = newTournament.getTournamentID();
                tid.setText(str);
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewTournament().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton HomeandAway;
    private javax.swing.JRadioButton Knockout;
    private javax.swing.JTextField Season;
    private javax.swing.JRadioButton SingleGame;
    private javax.swing.JLabel Style;
    private javax.swing.JLabel TeamNo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField minimumPlayer;
    private javax.swing.JLabel mp;
    private javax.swing.JButton next;
    private javax.swing.JTextField numberofTeams;
    private javax.swing.JButton reset;
    private javax.swing.JTextField tid;
    private javax.swing.JTextField tournamentName;
    // End of variables declaration//GEN-END:variables
}
